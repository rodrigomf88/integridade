const cds = require('../../cds')
const { cqn2cqn4sql } = require('../../common/utils/cqn2cqn4sql')
const { generateAliases } = require('../utils/generateAliases')

const _restoreLink = req => {
  if (req.query.INSERT?.entries) {
    return (req.data = Array.isArray(req.query.INSERT.entries) ? req.query.INSERT.entries[0] : req.query.INSERT.entries)
  }
  if (req.query.UPDATE?.data) {
    return (req.data = req.query.UPDATE.data)
  }
}

function handler(req) {
  if (typeof req.query === 'string') return

  // invoke req.subject and req.query.elements before it gets modified
  req.subject
  try {
    req.query.elements
  } catch {
    // ignore potential errors (no x4 support in req.query.elements)
  }

  if (!this.model) {
    // best-effort rewrite of path in from
    req.query = cqn2cqn4sql(req.query, { definitions: {} }, { service: this })
    return
  }

  const _streaming = cds.env.features.stream_compat && req.query._streaming

  // convert to sql cqn
  req.query = cqn2cqn4sql(req.query, this.model, { service: this })

  // restore link to req.data
  _restoreLink(req)

  if (_streaming) req.query._streaming = _streaming

  generateAliases(req.query)
}

handler._initial = true
module.exports = handler
