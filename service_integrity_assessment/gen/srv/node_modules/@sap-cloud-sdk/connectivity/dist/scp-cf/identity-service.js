"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.shouldExchangeToken = exports.exchangeToken = void 0;
const xssec_1 = require("@sap/xssec");
const environment_accessor_1 = require("./environment-accessor");
const jwt_1 = require("./jwt");
/**
 * @internal
 * Make a token exchange from IAS token to XSUAA token.
 * @param options - Configuration for how to retrieve destinations from the destination service.
 * @returns Exchanged token.
 */
async function exchangeToken(options) {
    const xsuaaService = (0, environment_accessor_1.getXsuaaService)({
        disableCache: !options.cacheVerificationKeys
    });
    const { token } = await (0, xssec_1.createSecurityContext)(xsuaaService, {
        jwt: options.jwt
    });
    return token.getTokenValue();
}
exports.exchangeToken = exchangeToken;
/**
 * @internal
 * Checks whether the IAS token to XSUAA token exchange should be applied.
 * @param options - Configuration for how to retrieve destinations from the destination service.
 * @returns A boolean value, that indicates whether the token exchange should be applied.
 */
function shouldExchangeToken(options) {
    // iasToXsuaaTokenExchange is optional, token exchange is enabled by default
    return (options.iasToXsuaaTokenExchange !== false &&
        !!options.jwt &&
        !(0, jwt_1.isXsuaaToken)((0, jwt_1.decodeJwtComplete)(options.jwt)));
}
exports.shouldExchangeToken = shouldExchangeToken;
//# sourceMappingURL=identity-service.js.map